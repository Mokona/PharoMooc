
!! Refactorings and Tests

+>file://figures/LogoPharo.png+

!! What is Refactoring?

- The process of changing a software system in such a way
that it does not alter the external behaviour of the code,
yet improves its internal structure [Fowl99a]
- A behaviour-preserving source-to-source program
transformation [Robe98a]
- A change to the system that leaves its behaviour
unchanged, but enhances some non-functional quality -
simplicity, flexibility, understandability, ... [Beck99a]

!! Typical Refactorings

+>file://figures/ListRefactoring.png+

!! Why Refactoring?
- "Grow, don't build software" Fred Brooks
- Some argue that good design does not lead to code needing refactoring,
- But in reality
-- Extremely difficult to get the design right the first time
-- You cannot fully understand the problem domain
-- You cannot understand user requirements, if he does!
-- You cannot really plan how the system will evolve in five years
-- Original design is often inadequate
-- System becomes brittle, difficult to change
- Refactoring helps you to
-- Manipulate code in a safe environment (behavior preserving)
-- Create an environment a situation where evolution is possible
-- Understand existing code

!! Refactor To Understand

- Obvious
-- Programs hard to read => Programs hard to understand => Programs hard to modify
-- Programs with duplicated logic are hard to understand
-- Programs with complex conditionals are hard to understand
-- Programs hard to modify
- Refactoring code creates and supports the understanding
-- Renaming instance variables helps understanding methods
-- Renaming methods helps understanding responsibility
-- Iterations are necessary
- The refactored code does not have to be used!

!! Test and Refactorings

- Tests can cover places where you have to manually change the code
-- Changing 3 by 33, nil but NewObject new
- Tests let you been more aggressive to change and improve your code

!! Summary

- If you are serious about programming
- If you do not have time to lose
- If you want to have synchronized documentations
- Write unit tests...
