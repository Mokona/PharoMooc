{
  "title":"Debugging in Pharo",
  "slidesid" : "W5S05"
}

${slide:title=What You Will Learn}$

- The system is alive: Communicate with it
- The debugger is your best friend
- Don't be afraid of it

${slide:title=Debugging}$

+>file://figures/DebugSelf2.png|width=100+

${slide:title=Debugging}$

- Closing the debugger does not solve bugs
- The debugger is your best friend
-- communicate with objects of the context
-- check state
-- send messages to specific objects
-- compile code on the fly
-- retry without restarting from scratch

Watch the videos and practice

${slide:title=Simple Trace}$

[[[
Transcript
   cr;
   show: 'here with value: ', x printString
]]]

- used when you don't have tools
- often inefficient
- we can do better

${slide:title=Defining a Breakpoint}$

[[[
   ...
   Halt now.
   ...
]]]

==Halt now== or ==self halt== will systematically
- pause the program
- invoke the debugger

${slide:title=Single-Shot Halt}$

[[[
  ...
  Halt once.
  ...
]]]

To enable it, evaluate
[[[
  Halt enableHaltOnce
]]]

- ==Halt once==, once enabled, stops the first time

${slide:title=Halt After n Iterations}$

[[[
Halt onCount: 10
]]]

${slide:title=You Can Invent Your Own}$

Define a global variable and store an object or a value

[[[
Debug == self
  ifTrue: [ Halt now ]
]]]

[[[
Debug > 4
  ifTrue: [ Halt now ]
]]]


${slide:title=Conditional Halt}$

How to halt a method that is heavily used?
- ==if: aSelector== stops the execution only if the method has been invoked from message named ==aSelector==
- ==if: aBlock== stops the execution only if the block is true

Example:
- ==foo== will stop only when invoked from the message ==printString==
[[[
foo
  ...
  Halt if: #printString
  ...
]]]

${slide:title=Conditional Halt and Test}$

Hint: Write a test and get benefit for it

Example:
[[[
foo
  ...
  Halt if: #testSetInitialized
  ...
]]]

- ==foo== will stop only when invoked from the test named ==#testSetInitialized==

${slide:title=Summary}$

- Watch the videos about the debugger
- Watch the videos about the inspector
- Try, try and try them
- These tools are powerful

% Local Variables:
% compile-command: "cd ../.. && ./compile.sh --to=Beamer Slides/Week5/C019-W5S05-Debugging.pillar"
% End:
