{
    "title":"A Simple HTTP Server",
    "author":"StÃ©phane Ducasse",
    "complement":"http://stephane.ducasse.free.fr/ \\\\ stephane.ducasse@inria.fr"
}

${slide:title=A little book server}$

+>file://figures/TeapotWelcome.png|width=80+

${slide:title=Getting a book}$

[[[
ZnClient new
    url: 'http://localhost:8181/books/1';
    get
]]]

+>file://figures/TeapotOneBook.png|width=80+


${slide:title=Adding a book}$

[[[
	ZnClient new
	    url: 'http://localhost:8181/books/1';
	    formAt: 'author' put: 'van Caekenberghe et al';
	    formAt: 'title'  put: 'Entreprise Pharo';
	    post.
]]]


${slide:title=The full server}$

[[[
| books teapot |
books := Dictionary new.
teapot := Teapot configure: {  #defaultOutput -> #json.   #port -> 8181 . #debugMode -> true }.
teapot
   GET: '/' -> '<h1>A simple book library server</h1>'; output: #html;
   GET: '/books' -> books;
   GET: '/books/<id:IsInteger>' -> [ :request | books at: (request at: #id) asString];
   POST: '/books/<id>' 
            -> [ :request | | book |
                book := { 'author' -> (request at: #author). 
                         'title'  -> (request at: #title) } asDictionary.
                books at: (request at: #id) put: book ];     
   start.
]]]


${slide:title=Configuring a Server}$

[[[
    | books teapot |
    books := Dictionary new.
    teapot := Teapot configure: {  #defaultOutput -> #json.   #port -> 8181 . #debugMode -> true }.
]]]

${slide:title=Configuring a Server}$

[[[
    | books teapot |
    books := Dictionary new.
    teapot := Teapot configure: {  #defaultOutput -> #json.   #port -> 8181 . #debugMode -> true }.
]]]
- ==| |== delimits local variable definition.
- ==:\=== assignment.
- ==#port== is a symbol (aka unique string).
- ==configure:== is a message sent to the class ==Teapot==
- In ==configure:==, ==:== means that the message is expecting an argument
- =={ . . }== is an array of three elements
- ==->== creates a key-value pair

${slide:title=Defining the server routes}$

[[[
...
teapot := Teapot configure: {  #defaultOutput -> #json.   #port -> 8181 . #debugMode -> true}.
teapot
   GET: '/' -> '<h1>A simple book library server</h1>'; output: #html;
   GET: '/books' -> books;
   GET: '/books/<id:IsInteger>' -> [ :request | books at: (request at: #id) asString];
   POST: '/books/<id>' 
            -> [ :request | | book |
                book := { 'author' -> (request at: #author). 
                         'title'  -> (request at: #title) } asDictionary.
                books at: (request at: #id) put: book ];     
   start.
]]]

${slide:title=More about syntax}$

[[[language=smalltalk
    teapot 
         GET: '/books/<id:IsInteger>'
                  -> [ :request | books at: (request at: #id) asString];
]]]

- ==[ :request | books at: (request at: #id) asString ]== is an anonymous function
-- ==:request== is an argument
-- ==at:== is a message accepting one argument



${slide:title=Conclusion}$

- Teapot is a cool package ==http://smalltalkhub.com/#!/~zeroflag/Teapot==
- A web server in one page
- Based on Zinc is a really strong and well designed HTTP client/server

