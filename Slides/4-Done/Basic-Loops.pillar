{
	"title":"Loops",
	"subtitle":"",
	"author":"St\'ephane Ducasse",
	"complement":"http://stephane.ducasse.free.fr/ \\ stephane.ducasse@inria.fr"
}

${slide:title=Loops}$

- Loops are expressed as messages. 
- Many different ones
-- Plain loops
-- Conditional loops
- Messages sent to numbers, collections or blocks
- Iterators


${slide:title=Loops: timesRepeat:}$

To repeat a given number of times an action

[[[
	4 timesRepeat: [ self doSomething ]
]]]


${slide:title=Loops: to:do:}$

[[[language=smalltalk
1 to: 100 do:
    [ :i | ... i ...]
]]]

The block will be executed with the temporary ==i== taking values from 0 to 100
 
[[[language=smalltalk
1 to: 100 do:
    [ :i | Transcript show: i ; space]
]]]

+>file://figures/1to100.png+

${slide:title=Loops: to:do:}$

[[[language=smalltalk
    0 to: 100 by: 3 do: [ :i | ... ]
]]]

The block will be executed with i taking values from 0 to 100 by step of 3

[[[language=smalltalk
1 to: 100 by: 3 do:
    [ :i | Transcript show: i ; space]
]]]

+>file://figures/1to100by3.png+


${slide:title=Basic Iterators Overview}$

- ==do:== (iterate)
- ==collect:== (iterate and collect results)
- ==select:== (select matching elements)
- ==reject:== (reject matching elements)
- ==detect:== (get first element matching)
- ==detect:ifNone:== (get first element matching or a default value)
- ==includes:== (test inclusion)
- and a lot more...


${slide:title=Loops: do:}$

[[[language=smalltalk
    aCol do: [:each | ... ]
]]]

The block is executed with ==each== taking as value all the elements of aCol.

[[[language=smalltalk
#(15 10 19 68) do:  
      [:i | Transcript show: i ; cr ]
]]]

${slide:title=Loops: whileTrue:}$

[[[language=smalltalk
    [ ... ] whileTrue: [ ... ]
]]]

Execute the argument, aBlock, as long as the value of the receiver is true. 

[[[language=smalltalk
atLeastAsLuminentAs: aFloat 
	| revisedColor |
	revisedColor := self.
	[ revisedColor luminance < aFloat ] whileTrue: [ revisedColor := revisedColor slightlyLighter ].
	^ revisedColor
]]]

${slide:title=Loops: whileTrue}$

Execute the receiver, as long as its value is true.

[[[language=smalltalk
    [ ... ] whileTrue
]]]

Equivalent with ==whileFalse== and ==whileFalse:==

${slide:title=Summary}$

- Loops are expressed as messages. 
- Many different ones
-- Plain loops
-- Conditional loops
- Messages sent to numbers, collections or blocks
- Iterators



