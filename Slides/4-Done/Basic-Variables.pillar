{
    "title":"Variables"
}


${slide:title=Lowercase for local variables|label=points}$

- temporary variables
[[[language=smalltalk
    | str |
    str := 'Tiramisu'
]]]

- instance variables
[[[language=smalltalk
    Object subclass: #Point
       instanceVarNames: 'x y'
]]]

- method or block arguments

[[[language=smalltalk
    raisedTo: power

    [ :x | ]
]]]

${slide:title=Special Variables|label=points}$

 ==self==, ==super==, ==thisContext==, ==true==, ==false==, ==nil==

- ==self==: the receiver of the message (this in Java).
- ==super==: refers to the receiver but look method in the super class of the class defining the method. 
- ==thisContext== refers to the current stack.
- ==true==, ==false== are the Booleans
-- ==true== is instance of ==True==
-- ==false== is instance of the class ==False==
- ==nil== is ==UndefinedObject== instance


${slide:title=Shared or Global starts with Uppercase|label=points}$

- Transcript is an object that is globally accessible a kind of stdout
[[[language=smalltalk
    Transcript cr .
    Transcript show: 'hello world'.
    Transcript cr .
]]]

- Class ==Object== is global
[[[language=smalltalk
    Object subclass: #Point
]]]


${slide:title=ClassVariables are Shared Variables|label=points}$

- How to share information between all the instances of a class and subclasses
- Use a classVariable
[[[
    Object subclass: #CombinedChar
        instanceVariableNames: 'codes combined'
        classVariableNames: 'Compositions Decompositions Diacriticals'
        category: 'Kernel-BasicObjects'
]]]

- Here ==Compositions== is shared between all the CombinedChar instances and instances of subclasses


${slide:title=Summary|label=points}$

- Lowercase are used for local/private/temporary variables
- Uppercase are used for shared or global variables