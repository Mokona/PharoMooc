{
    "title":"Messages for Java Programmers",
    "slidesid" : "W2S02"
}

${slide:title=Only Objects and Messages}$

Remember we ""only"" manipulate objects: mouse, booleans, arrays, numbers, compressed, strings, windows, scrollbars, canvas, files, trees, compiler, sound, url, socket, fonts, text, collections, stack, shortcut, streams, ...

and we send messages, messages, messages and messages (and closures)


${slide:title=Equivalence}$

In Java
[[[
    ArrayList<String> strings = new ArrayList<String>();
]]]

in Pharo
[[[
strings := ArrayList new.
]]]


${slide:title=Equivalence}$

In Java
[[[
Thread regThread = new Thread(
       new Runnable() {
         public void run() {
                this.doSomething();} });
 regThread.start();
]]]

In Pharo
[[[
[self doSomething] fork.
]]]


${slide:title=Three kind of messages}$

- Unary
[[[
5 factorial
Transcript cr
]]]

- Binary
[[[
3 + 4
]]]

- Keyword-based messages
[[[
2 between: 0 and: 5

Transcript show: 'hello world' ; cr
]]]



${slide:title=Keyword Messages}$

[[[
    anObject keyword1: argument1 keyword2: argument2
]]]

equivalent to

[[[
    receiver.keyword1keyword2(argument1, argument2)
]]]


${slide:title=Keyword Messages for Javaists}$

[[[
    postman.send(mail,recipient);
]]]

${slide:title=Keyword Messages for Javaists}$

[[[
    postman.send(mail,recipient);
    postman . send ( mail , recipient );
]]]


${slide:title=Keyword Messages for Javaists}$

[[[
    postman.send(mail,recipient);
    postman . send ( mail , recipient );
    postman send mail recipient
]]]

${slide:title=Keyword Messages for Javaists}$

[[[
    postman.send(mail,recipient);
    postman . send ( mail , recipient );
    postman send mail recipient
    postman send mail to recipient
]]]

${slide:title=Keyword Messages for Javaists}$

[[[
    postman.send(mail,recipient);
    postman . send ( mail , recipient );
    postman send mail recipient
    postman send mail to recipient
    postman send: mail to: recipient
]]]


${slide:title=Keyword Messages for Javaists}$

[[[
    postman.send(mail,recipient);

    postman send: mail to: recipient
]]]

- The message is named ==send:to:==
- It is sent to ==postman==
- With two arguments: ==mail== and ==recipient==

${slide:title=Conditionals are just messages}$

Booleans are objects
Conditional are messages sent to booleans or block

[[[
    initialAnswer := fullName isEmptyOrNil
        ifTrue: [ 'FirstnameLastname' translated ]
        ifFalse: [ fullName ]
]]]

${slide:title=Loops are just messages sent to objects}$

[[[
4 timesRepeat: [ self doSomething ]
]]]

[[[
0 to: 100 do: [ :i | ... ]
]]]

for (i=0,i<101,i=i+3)
[[[
0 to: 100 by: 3 do: [ :i | ... ]
]]]

Iterator
[[[
aCol do: [:each | ... ]
]]]



${slide:title=Summary}$

- Three kinds of messages: unary, binary and keywords
- () > unary > binary > keywords
- Conditionals are messages
- Loops too.
