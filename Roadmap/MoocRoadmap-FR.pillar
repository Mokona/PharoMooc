{
    "title":"Déroulé du Mooc Pharo"
}

!Déroulé Globale du MOOC

# Semaine 1: Démarrage et Découverte de la Syntaxe (Welcome on Board and Syntax Discovery)
# Semaine 2: Syntaxe Pharo, Blocks et Inspecteur (Pharo Syntax, Blocks and Inspector)
# Semaine 3: Conception, Méthodes de classes et Collections (Design, Class Methods and Collections)
# Semaine 4: Héritage et Recherche de Méthode et Developpement Web (Inheritance&Lookup and Web Development)
# Semaine 5: Exception, Debuggage et Réflexion (Exception, Debugging and Reflection)
# Semaine 6: Repenser la recherche de méthode et points avancés (Rethink lookup and Advanced OO Design)
# Semaine 7: Conception OO et Tests (More on OO Design and Testing)

!!Differentes ressources et activités

Ce document résume le déroulé du Mooc semaine par semaine. 
Nous pensons qu'il est préférbale de faire les activités proposer dans l'ordre que nous avons conçu. Maintenant il est fort possible que pour certains lecteurs un autre ordre ne pose pas de difficultés particulières. 

Nous proposons plusieurs activités (identifiable par leur nom ou étiquette accolée):

- [""Lecture""] signifie que vous devez suivre la vidéo qui contient le cours décrit dans les diapositives du cours. Tous les PDFs des diapositives sont fournis. De manière générale tous les morceaux de code présentés sont executables directement dans Pharo donc n'hésitez pas à le faire.
- [""Live""] signifie que vous devez suivre une vidéo qui démontre certains aspects de l'IDE interactif de Pharo. Nous suggérons de répéter les points qui vous semblent opportun. 
- [""Quiz""] signifie que vous devez répondre a des séquences de questions. Regardez les cours doit suffir pour trouver les bonnes réponses. Ce sont les résultats des quiz qui vous permettront d'obtenir un certificat de réussite. 
- [""Redo""] signifie que vous devez 
-- (1) suivre les videos et  
-- (2) reproduire ce qui est démontré pas à pas en utilisant votre installation de Pharo.
Durant le premier redo, vous devez vraiment suivre et reproduire ce que vous voyez. 
- [""Exercise""] signifie que vous devez suivre un exercice guidé et le reproduire en utilisant Pharo. L'exercice est décrit dans un document. Certains exercices proposent deux versions : une complète et une à trous. Nous vous conseillons de commencer par la version à trous. Nous ne donnerons pas de notes pour ces exercices mais ils sont importants pour vous entrainer.  
- [""Mini project""] signifie que vous avez un exercice plus long nommé TinyBlog. Il va durer toutes la durée du Mooc. Chaque semaine nous allons ajoutr des fonctionalités. Chaque semaine vous aurez acces à une version complète de la solution de la semaine précédente de manière à ce que vous puissiez continuer en cas de problèmes. 

- [""Challenge""] signifie que vous avez un petit défi à résoudre en farfouillant dans Pharo. 
L'idée est que vous devez vous débrouiller pour trouver des informations et ne pas avoir peur de vous perdre. Vous pouvez poser des questions sur la mailing-list Pharo-users. 
Vous devez faire le challenge pour vous. Nous n'allons pas le noter car il y a souvent plusieurs façons de résoudre un challenge. Chaque semaine vous aurez la solution du challenge et nous vous encourageons à lire les messages et les classes utilisées dans la solution. 
De plus les challenges sont souvent marrants et des petits défis. Donc ne boudez pas ce petit plaisir


!!Semaine 1 : Démarrage et Découverte de la Syntaxe 

# [Lecture] Objectives of this MOOC
# [Lecture] Pharo: an Immersive Object-Oriented System
# [Lecture] Pharo Vision
# [Lecture] Pharo Object Model in a Nutshell
# [Lecture] Pharo Syntax in a Nutshell
# [Lecture] Class and Method Definitions
# [Live] Selecting and executing expressions
# [Live] Learn Pharo with Prof Stef
# [Live] Syntax Highlighting gives Feedback
# [Live] Learn Keyboard Shortcuts
# [Redo] Coding a Counter
# [Exercise] Expressions and Messages
# [Exercise] Developing a Simple Counter
# [Exercise] TinyBlog: Presentation and Model
# [Challenge] Challenge 0

!!Semaine 2 : Syntaxe Pharo, Blocks et Inspecteur

# [Lecture] Understanding Messages
# [Lecture] Messages for Java programmer
# [Lecture] Messages: Composition and Precedence
# [Lecture] Understanding Messages: Sequence and Cascade
# [Live] Finding Methods with Finder
# [Live] GTInspector 1: Inspect and Interact with Objects
# [Lecture] Introduction to Blocks
# [Lecture] Loops
# [Lecture] Booleans and Conditions
# [Lecture] Parenthesis vs Square Brackets
# [Lecture] Yourself
# [Lecture] The Essence of Dispatch through an Exercise
# [Live] Nautilus 1: First Meet with the Code Browser
# [Live] Nautilus 2: Packages, Tags and Groups
# [Live] Nautilus 3: Inheritance view
# [Redo] Coding a Counter in the Debugger
# [Exercise] Solution: Expressions and Messages
# [Exercise] Expression Results
# [Exercise] Creating a Simple Embedded DSL with Pharo
# [Exercise] TinyBlog: Extending and Testing the Model
# [Challenge] Solution: Challenge 0
# [Challenge] Challenge 1


!!Semaine 3 : Conception, Méthodes de classes et Collections

# [Lecture] Essence of Dispatch: Taking Pharo Booleans as Example
# [Lecture] Essence of Dispatch
# [Lecture] Variables
# [Lecture] A Simple HTTP Application: a Pretext to Revisit Pharo Syntax
# [Live] Nautilus 4: How to Become a Super Pharo Developer: Understanding Sender and Implementors
# [Live] Nautilus 5: Navigating Fast Inside Classes
# [Lecture] Class Methods
# [Lecture] An Overview of Essential Collections
# [Live] Spotter 1: Find and Browse a Class
# [Live] Spotter 2: Filter Results by Category
# [Lecture] Iterators
# [Lecture] Stream Overview
# [Lecture] Understanding Return
# [Redo] Coding a Little Domain Specific Language
# [Exercise] Solution: Expression Results
# [Exercise] Rewriting Expressions
# [Exercise] TinyBlog: A Simple Teapot Web Interface
# [Challenge] Solution: Challenge 1
# [Challenge] Challenge 2


!!Semaine 4 : Héritage et Recherche de Méthode et Développement Web

# [Lecture] Inheritance Basics
# [Lecture] Inheritance & Lookup: Lookup
# [Lecture] Inheritance & Lookup: Super
# [Lecture] Inheritance & Lookup: DoesNotUnderstand:
# [Lecture] Inheritance & Lookup: Lookup in Metaclasses
# [Lecture] Class Methods at Work
# [Lecture] Overview of Pharo Web Stack
# [Lecture] Seaside: an Innovative Web Application Framework
# [Lecture] Seaside: Rendering Components
# [Lecture] Seaside: a Glance at MetaData and REST
# [Lecture] Voyage: NoSql Object Database
# [Live] How to load code from repository
# [Live] How to load projects
# [Live] Nautilus 6: An overview of Refactorings
# [Live] Nautilus 7: Using the Quality Assistant and Code Critic
# [Exercise] Solution: Rewriting Expressions
# [Exercise] TinyBlog: Data Persitency using Voyage and Mongo
# [Exercise] TinyBlog: Building a Web Interface with Seaside
# [Exercise] Building a Simple Contact Book Application
# [Challenge] Solution: Challenge 2
# [Challenge] Challenge 3

!!Semaine 5 : Exception, Debuggage et Réflexion
# [Lecture] Seaside: Composing Components
# [Lecture] Really Understanding Class Methods
# [Lecture] Common Errors
# [Lecture] Powerful Exceptions: an Overview
# [Lecture] Debugging in Pharo
# [Lecture] SUnit: Unit Tests in Pharo
# [Lecture] Files in Pharo
# [Lecture] Reflection: Basic Introspection
# [Lecture] Benchmarking in Pharo
# [Live] Spotter 3: Scoping and Reducing Search
# [Live] Spotter 6: Search, Navigate and Preview Files
# [Live] Learning the Debugger
# [Live] How to find a bug?
# [Live] GTInspector 2: Inspect Files and Directories
# [Exercise] TinyBlog: Building an Admin Seaside Web Interface with Magritte
# [Exercise] TinyChat
# [Challenge] Solution: Challenge 3
# [Challenge] Challenge 4


!!Semaine 6 : Repenser la recherche de méthode et points avancés 
# [Lecture] Did You Really Understand Super?
# [Lecture] Understanding the Implementation of ifTrue:ifFalse:
# [Lecture] Dice new vs. self class new
# [Lecture] Message sends are plans for reuse
# [Lecture] Hooks and Templates
# [Lecture] Runtime Architecture
# [Lecture] Characters, Strings and Symbols
# [Lecture] Dynamic Vs. Literal Arrays
# [Live] Understanding Images and Changes Files
# [Live] Using the Pharo Launcher to manage your Pharo images
# [Live] Diffing and Merging in Pharo
# [Live] GTInspector 4: Build Custom Tab Views for your Objects
# [Exercise] TinyBlog: Deployment
# [Challenge] Solution: Challenge 4
# [Challenge] Challenge 5


!!Semaine 7 : Conception OO et Tests
# [Lecture] Advanced Points on Classes
# [Lecture] Variable Size Objects
# [Lecture] Understanding Metaclasses
# [Lecture] Reflective Operations for Live Programming
# [Lecture] DoesNotUnderstand: a Precious Hook
# [Lecture] Reflection: Stack as an Object
# [Lecture] Avoid Null Checks
# [Lecture] A Journey in Pharo: A Bright Future
# [Live] Spotter 4: The Preview pane
# [Live] Spotter 5: Search in Playground History
# [Live] GTInspector 3: Understand Pharo Internals by Inspection
# [Challenge] Solution: Challenge 5
