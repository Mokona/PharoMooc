! Roadmap

!! Overall Structure

A revoir

- Semaine 1 : Prise en main - premier éléments syntaxiques
- Semaine 2 : Syntaxe complète - structures de données -  IDE 
- Semaine 3 : Modèle objet - Outils
- Semaine 4 : Héritage revisité - Structures de données avancées
- Semaine 5 : Liaison tardive et ses implications en conception objet - Développement web
- Semaine 6 : Programmation Réflexive - Repenser la liaison tardive
- Semaine 7 : Points de conception avancée - Développement web (REST)
- Semaine 8 : Quelques patrons de conception - Première base de données



!!! Week 1: prise en main – premier éléments syntaxiques

- Welcome: Goal of the mooc - objectives 						2 min
-- Pharo Simple immersive 
-- Deep OO thinking

- What is Pharo - Goal - Community - Mini success stories		6 min
- Live: Several Live Examples: Seaside/3D/Zinc/GT?				6 min

- Live coding counter:											6 min
- Live coding counter: the strange way							6 min

- Basic Object model: simple (single inheritance, public methods in 5 slides)		6 min
- Basic syntax: including class/method definition (so that exercises can be done)	6 min

- Live: Runtime The notion of image save the code				3 min
-- start/save
-- smalltalkhub


!!!! Resources probably as slides
- Installation on Pharo.org
- Live: Getting started: Coding live example counter: class first 10 min
- Live: Getting started: Coding live example counter: test first 10 min
- mailing-list, books, servers, ci, videos, Chapters Pharo by Example
	
!!!! Exos	
- Simple Exos
- Redoing the counter example in two modes.
- Videos sympaes de la communauté



!!! Week 2: Syntaxe complète - IDE

- Suggestion luc sur Zinc						6 min
- An example avec Teapot						6 min
- Live: A simple REST server in Teapot			6 min

- Messages (part one)							6 min
- Mesages (part two)							6 min

- Live: Debugger is your friend (idea?)			6 min
- Live: GTInspector "simple interaction"		6 min
- Live: Publishing Code: on smalltalkhub		6 min

- Conditionals \+ () vs []						3 min

- First Glance at Collections (OrderedCollection, Array, Set)	6 min
- Conditional 													6 min
- Loops (with a do: and collect:)								6 min
- Teaser for next week: not 							(may be en premier semaine)


!!!!Resources: 
- Chapitre Pharo by exemple 

!!!! Exos	
- one star: Simple Exos
- 2 stars: Lamp one of noury
- 2 stars: Coding the addressbook

!! Week 3 : Modèle objet – Outils

- Not solution										6 min (does it fit in 6 min)
- Messages send are a dynamic case					6 min

- Blocks											6 min
- Live: Dice Game DSL dice							6 min
- Live: Dice Game DSL handle						6 min

- Live: trouver de l'information (click inpsect)	6 min
- Live: Recovering changes (epicea???)				6 min

- Second glance at Collection (Dictionary)??	6 min

- Object model: 								6 min
	"static method" - only one send
	public method 
	no constructor
	no operator
- Live: Picasa meta								6 min
-- explaining one the fly code generation and coding in the debugger
- Design: Learning from the System -  not

- Tools to find information: implementors, senders, finder and Spotter
-- Navigation exercices
- Live: seaside counter / multi counter			6 min




!!!!Resources: 

!!!! Exos	
- Find how to 
- Simple Exos
- Lamp two of noury
- 2 stars: Redoing the DSL

!!! Week 4: Héritage revisité - Qq Structures de donneé
- Inheritance											6 min
- Did you really get this?								6 min
- Did you really get super?								6 min
- Extending GT:  Extending the inspector and spotter for the addressbook				6 min

- Iterators												6 min
-- to split in two

- Magritte
	MAAddress

- Streams in a nutshell									6 min
-- streamContents

- Benchmarking? 
-- concatenation vs preallocation
- Class var vs instance variables

A ce moment la on pourrait bouger le reste dans une autre semaine Week 4 par exemple
- Seaside Component + html + bootstrap			6 min

- Seaside call:/answer:							6 min
- Seaside tips and tricks
	10 + 20 + error + debugger			6 min
	counter back button

!!!!Resources: 

!!!! Exos	
- Simple Exos
- 2 stars: redoing Picasa
- Quinto?

!!! Week 5: Dispatch – Developpement web
- Reflection for doing what?
-- basic
-- HaltIf: 
-- scripting google service API? Stuff of franz Prinz
-- 

- Understanding Class methods							6 min

- Managing project using versionner				 		6 min

- Magritte												6 min

- Exception 											6 min

- Teaser: next one we build a chat!

!!!!Resources: 

!!!! Exos	
- Simple Exos
- 2 stars: Expressions visitor
- Turtle of laurent laffont? / 

- 

!!! Week 6: Reflection – Repenser la liaison tardive


- Save object in Mongo with Voyage					6 min

- Did you read understand super method				6 min

- Copy as a hook and template						6 min



!!!! Exos	
- Simple Exos
- 3 stars:  tinychat



!!! Week 7: Points de conception avancees

- messages are plan of reuse 
- Double dispatch on paper (do we want that?)					6 min
-- number and floats
-- fraction 
- Visitor design pattern or only in exo




!!!! Exos	
- Simple Exos

















































! Items: Fragments of Lectures and Exercises

Items are units of knowledge. A typical session (video) will be between 6 to 9 minutes and composed of a couple of items. Exercises will be also based on items. 

!! Item Description

An item is composed of: 
- Name: ''Iteration with ZnEasy''
- Id: An id
- A tag: environment, syntax, model, fun, tip
- A Problem: How to iterate/manipulate collections?
- A description about one line: students learn iterators such as ==do:==, ==collect:==, and ==select:== on 
- Resources: 
-- *http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/006-FunWithCollection.mov*
- Ideas: use ZnEasy instead to select files served by a server.
- Exercises: A list of exercises.
- Contents: A little synopsis for the videos.
- Slides: A list of ids of useful slides.

!! Ideas to assess and dispatch within the lectures

And we could add some more specific ones:
- Browse and query XML
- Browse and query JSON
- Query a REST API with Zinc
- Query a Mongo DB

These would require extra packages to be loaded.



Inspector basic:
- Browsing the file system: 
http://www.humane-assessment.com/blog/browsing-files-with-gtinspector/
http://www.humane-assessment.com/blog/searching-file-system-with-gtspotter/
- Browsing a Postgres DB:
http://www.humane-assessment.com/blog/dynamic-exploration-of-a-postgres-db-with-the-gtinspector/
- Understanding morphs:
http://www.humane-assessment.com/blog/custom-morph-screenshot-with-gtinspector/
http://www.humane-assessment.com/blog/spotting-a-troublesome-image-morph/
http://www.humane-assessment.com/blog/managing-morph-keybindings-with-gtinspector


Advanced:
- Searching for code patterns:
http://www.humane-assessment.com/blog/searching-for-a-morph-glitch/
- Pharo performance analysis:
http://www.humane-assessment.com/blog/assessing-pharo-performance-with-gtinspector/
- Searching for object patterns (this one uses Roassal):
http://www.humane-assessment.com/blog/discover-contracts-by-visualizing-objects-in-gtinspector/
- Extending the inspector and spotter for a simple model (like the address book)
- Debugging the debugger with the inspector:
http://www.humane-assessment.com/blog/debugging-the-debugger-with-the-inspector/
- Understanding the AST with the inspector
- Guiding custom code changes with the inspector:
http://www.humane-assessment.com/blog/guiding-custom-changes-with-gtinspector




















!! Unit of Knowledge Item: Welcome

!!! Pharo in a nutshell 
- Name: Pharo in a nutshell 
- Tag: info
- Problem: What is pharo
- Description about one line: Pharo is open-source dynamically typed reflective language
- Resources: 
- Contents: 
- Slides:

!!! Downloading and getting started 
- Name: Pharo in a nutshell 
- Tag: info
- Problem: How to get and run pharo
- Description about one line: We will show the launcher and files.pharo.org
- Resources: Chapter on zero-conf
- Contents: 
- Slides: 

!!! Pharo Resources 
- Name: Resources
- Tag: info
- Problem: Where are the key ressources
- Description about one line: We will present mailing-list, web site, books
- Resources: 
- Contents: 
- Slides:















!! Unit of Knowledge Item: Messages


!!! Three Kind of Messages
- Name: Resources
- Tag: 
- Problem: 
- Description about one line: 
- Resources: 
- Contents: 
- Slides:





!!! Messages for the Java Programmer
- Name: Resources
- Tag: info
- Problem: 
- Description about one line: 
- Resources: 
- Contents: 
- Slides:





!! Unit of Knowledge Item: Blocks

!!! Blocks a.k.a lexical closure
- Name: Blocks a.k.a lexical closure
- Tag: system, syntax
- Problem: How do we specify action to be done such as a button trigger?
- Description: Block are anonymous methods that are really powerful. 
- Contents: 
- Slides:



!!! Blocks other protocols
- Name: Blocks a.k.a lexical closure
- Tag: system, API
- Problem: How do we specify action to be done such as a button trigger?
- Description: Block are anonymous methods that are really powerful. 
- Contents: cull:, bench,....
- Slides:






!! Unit of Knowledge Item: loops



!!! Simple loops 
- Name: Simple loops 
- Tag: system, syntax
- Problem: how to loop over a collection?
- Description about one line: students will learn simple loops such as timesRepeat:, to:do:, to:do:by: 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/006-FunWithCollection.mov*
- Contents: 

!!! to:do: vs. (to:)do: 
- Name: to:do: vs. (to:)do: 
- Tag: system, syntax, tip
- Problem: how to loop over a collection?
- Description about one line: students simple loops such as timesRepeat:, to:do:, to:do:by: 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/006-FunWithCollection.mov*
- Contents: 



!! Unit of Knowledge Item: basic objects


!!!Characters		
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/051-BasicTypesIntroduction.mov*

!!! Strings
- Name: Strings 
- Tag: syntax
- Problem: how to declare and manipulate strings?
- Description about one line: students will learn string syntax and how to manipulate them 
- Exercises: #(ex-select-0001)


!!! String concat

!!!  Array access 
- Name: Array access  
- Tag: system, syntax
- Problem: how to loop over a collection?
- Description about one line: students will learn simple loops such as timesRepeat:, to:do:, to:do:by: 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/007-FunWithCollection.mov*
- Contents: 
[[[
#(1 2 3 4 5) at: 1
#(1 2 3 4 5) at: 1 put: 33
]]]




!!! Array static vs. array dynamic
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/051-BasicTypesIntroduction.mov*



!! Unit of Knowledge Item: Maths


!!! First look at Maths 
- Name: First look at Maths 
- Tag: system, syntax
- Problem: Math in Pharo in 3 min?
- Description about one line: students will learn about direct manipulation, automatic coercion, fraction addition is exact, and Pharo can handle large numbers.
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/005-FunWithWorkspace.mov*
- Contents: 

[[[
	1+2
		(1/3) + (2/3) 
		-> 1
	1000 factorial printString size
	1000 factorial / 999 factorial -\> 1000
]]]
- Slides:

	
!!! Pi, sin and others
- Name:  Pi, sin and others
- Tag: system, syntax
- Problem: how to express mathematical operations?
- Description about one line: students will learn that numbers are objects too, so we just send them message.
- Resources: 
- Contents: 
[[[
Float pi
0.5 sin
]]]
- Slides:


!!! No Precedence with Mathematical 
- Name: No Precedence with Mathematical 
- Tag: system, syntax
- Problem: How to express mathematical precedence?
- Description about one line: students will learn that mathematical operators are just plain messages so to specify precedence we should use ().
- Resources: 
- Precondition: students should have seen syntax of messages.
- Contents: 
[[[
	1/3 + 2/3
	vs. 
	(1/3) + (2/3)
]]]
- Slides:






!!!  Loops 
- Name: Simple loops 
- Tag: system, syntax
- Problem: how to loop over a collection?
- Description about one line: students will learn simple loops such as timesRepeat:, to:do:, to:do:by: 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/008-FunWithCollection.mov*
- Precondition: Syntax on Blocks
- Contents: 
[[[
100 timesRepeat: [ Transcript show: 'Pharo is cool' ; cr]

| i |
i := 1.
100 timesRepeat: [ Transcript show: i printString ; cr.
					i := i + 1].
					
1 to: 100 do: [ :i | Transcript show: i printString ; cr]

1 to: 100 by: 2 do: [ :i | Transcript show: i printString ; cr]

100 to: 1 by: -3 do: [ :i | Transcript show: i printString ; cr]

]]]




!!!  Conditionals 
- Name: Conditionals 
- Tag: system, syntax
- Problem: how to write a condition?
- Description about one line: students will learn about ifTrue:, ifFalse:, ifTrue:ifFalse:
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/009-FunWithCondition.mov*
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/010-FunWithCondition.mov*
- Precondition: Syntax on Blocks
- Contents: 


!!!  [] vs. () 
- Name: [] vs. ()  
- Tag: system, syntax
- Problem: When should we use ==[]== and when should we use ==()==
- Description about one line: students will learn that expressions inside () are always executed while inside [] are conditionally executed.
- Resources: 
- Precondition: Syntax on Blocks
- Contents: 



!!! Loops - Iterators
- Name: ''Iterators are your best friends''
- Problem: how to iterate/manipulate collections
- Description: do: collect: select: 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/006-FunWithCollection.mov*
- Ideas: use ZnEasy instead to select files served by a server
- Contents: 
- Precondition: Syntax on Blocks
- Exercises: #(ex-select-0001)
[[[
#(1 2 3 5 -1 12 0) collect: [:each | each * each]

#(1 2 3 5 -1 12 0) select: [:each | each odd]

#(1 2 3 5 -1 12 0) reject: [:each | each odd]

#(1 2 3 5 -1 12 0) do: [:each | Transcript show: each asString; cr ]
]]]


!! Unit of Knowledge Item: Environment

!!! [env] Sender/implementors

!!! [env] Inspecting an object 
- Name: Inspecting an object
- Tag: new
- Problem: How cna I tweek an object?
- Description about one line: students will learn to use an inspector to interact with an object. 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/007-FunWithCollection.mov*
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/102-ChangingValueInInspector.mov*
- Contents: 
[[[
#(1 2 3 4 5) at: 1
#(1 2 3 4 5) at: 1 put: 33
]]]


!!! [env] Debugger

- Name: Inspecting an object
- Tag: new
- Problem: How cna I tweek an object?
- Description about one line: students will learn to use an inspector to interact with an object. 
- Resources: 
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/007-FunWithCollection.mov*
--*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/102-ChangingValueInInspector.mov*
- Contents: 
[[[
#(1 2 3 4 5) at: 1
#(1 2 3 4 5) at: 1 put: 33
]]]

!!! [env] Commiting a package 

!!! [env] Workspace

!!! [env] Code browser

!!! [env] Messages finder
Old but the idea is there.
- Resources: 
-- *http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/015-MessageFinder.mov*

!!! [env] Example driven finder
Old but the idea is there.
- Resources: 
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/011-FunMethodFinder.mov*
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/012-FunWithMethodFinder.mov*
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/013-FunWithMethodFinder.mov*
	
!!! [env] Implementors
Old but the idea is there.	
- Resources: 
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/016-Implementors.mov	
	

!!! [env] Loading a package with the configuration browser
Old but the idea is there.
- Resources: 
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/051-LoadingFromSqueakMap.mov*
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/052-LoadingBreakOutFromSqueakMap.mov*
	
!!! Loading a package 
- Resources: 
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/060-LoadingPackageFromSqueakSource.mov*



	
!!! [env] SmalltalkHub package information
Old but the idea is there.
- Resources: 
--	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/055-SqueakSourcePackageInformation.mov*
	
!!! [env] Behind a firewall
???




!! Unit of Knowlegde: a Simple Class (all steps)
Old but the idea is there.

!!! [Dev] Creating a class
- Resources: 
-- *http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/100-ClassDefinition.mov*

!!! [Dev] Defining an initialize method	
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/101-InitializeMethod.mov*	
	
!!! [Dev] Defining a Getter
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/103-AddingGetterAccessor.mov*
	
!!! [Dev] Defining a increment/decrement
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/104-AddingOperations.mov*	
	
!!! [Dev] Difference printing vs. doing it
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/105-DifferencePrintItDoIt.mov*	

!!! [Dev] Adding a printOn: method
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/106-PrintingMethod.mov*
	
!!! [Dev] Invoking an overriden method
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/107-InvokingOverridenMethodOrNot.mov*
	
!!! [Dev] Writing a test
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/120-TestingSimpleCounter.mov*
	
!!! [Dev] Running a test
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/121-OpeningTestRunner.mov*

!!! [Dev] Defining other tests
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/122-OtherTests.mov*
	
!!! [Dev] creating a project on SHUB
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/130-CreatingASqueakSourceProject.mov*	
	
!!! [Dev] Saving a package 
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/131-SavingSimpleCounterAsMCPackage2.mov*
	
	
	
!! Unit of Knowledge Item: Programming Idioms

!!! Object initialization
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/101-InitializeMethod.mov*	
	
	
!!! printing
- Resources: 
-- 	*http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/106-PrintingMethod.mov*
	
!! Unit of Knowledge Item: OOP Reloaded

!!! [oop] Class

!!! [oop] Lookup

!!! [oop] what is self

!!! [oop] what is really super

!!! [oop] Metaclass











!! Unit of Knowledge Item: Most common Errors







!! Unit of Knowledge Item: Powerfull frameworls

!!! Seaside intro

!!! Seaside Zinc


