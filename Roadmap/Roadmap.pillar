! Roadmap

!! Resources probably as slides
- Installation on Pharo.org
- Live: Getting started: Coding live example counter: class first 10 min
- Live: Getting started: Coding live example counter: test first 10 min
- mailing-list, books, servers, ci, videos, Chapters Pharo by Example

!! Overall Structure

- Semaine 1 : Prise en main - premier éléments syntaxiques
- Semaine 2 : Syntaxe complète - structures de données -  IDE 
- Semaine 3 : Modèle objet - Outils
- Semaine 4 : Héritage revisité - Structures de données avancées
- Semaine 5 : Liaison tardive et ses implications en conception objet - Développement web
- Semaine 6 : Programmation Réflexive - Repenser la liaison tardive
- Semaine 7 : Points de conception avancée - Développement web (REST)
- Semaine 8 : Quelques patrons de conception - Première base de données


!!! Week 1: prise en main – premier éléments syntaxiques

2 - Welcome: Goal of the mooc - objectives [toreview] 2 min
-- Intro-objectives.key

6 - What is Pharo  [toreview] 6 min
-- Intro-WhatIs.key.zip

6 - Pharo Vision	[toreview]	6 min 
-- Intro-Vision.key

6 - Live: Installing, running Pharo + Hello world  6 min

6 - Intro-ModelInaNushell: simple (single inheritance, public methods in 5 slides) [toreview]	6 min

8 - Intro-SyntaxInaNushell: including class/method definition (so that exercises can be done) [to review]	6 min

6 - Live: coding counter:	6 min									<< a refaire avec bonne fonte
-- To redo 
6 - Live: coding counter: the strange way 6 min							<< a refaire avec bonne fonte
-- To redo 

6 - Live: Runtime The notion of image save the code				3 min		<< a faire
-- start/save
-- Todo

!!!! Exos	

- Redo: Redoing the counter example in two modes.
- Redo: Coding a REST interface to a counter (REST). 											<<< A faire
- Exo: Lamp et FeuTricolor																		<<< A Faire


!!! Week 2: Syntaxe complète - IDE

6 - Messages (unary binary mot clef + )					6 min					

3 - Messages for java programmer	[toreview]					3 min
-- Messages-ForTheJavaProgrammers.pillar

6 - Messages-Precedence		[toreview]							6 min
-- Messages-Precedence.pillar

6 - Mesages-Sequence (et cascade)	[toreview]					6 min 
-- Messages-Sequence.pillar

6 - Live: Inspector / message sending (We interact with the counter + inspect anything)	 6 min	<<< a faire
-- to do 
4 - Live: Publishing Code: on smalltalkhub				6 min
-- todo

6 - Blocks										[toreview]	6 min   
-- Blocks.pillar

6 - Blocks and Conditional and Loops			[toreview]	6 min   
-- Blocks-loops.pillar
-- we have a glitch because I show the implementation of iftrue:


6 - Basic Loops (with a do: and collect:)								6 min

6 - Conditional 													6 min
3 - () vs []


2 - TeaserExos: for next week -> not 	Design-EssenceOfDispatchExo.pillar		


!!!! Exos	
- Simple Exos Syntax
- Exos sur les boucles
- Redo: Turtle de Laurent Laffont : programming_with_live_objects.mpeg				<< A faire
- Ticket Model
-- User
-- Evenement (participants lieu)
-- EventParticipant = User?

!! Week 3 : Modèle objet – Outils

6 - Design-EssenceOfDispatch: solution											6 min 
6 - Design-EssenceOfDispatch: Not Solution: Messages sends are a dynamic case		6 min

- 6 As a revision of syntax: An example avec Teapot	6 min  Live: A simple REST server in Teapot 6 min

- 6 Variables											6 min
- 6 Class and methods									6 min
		- Object model: 								
			"static method" - only one send
			public method 
			no constructor
			no operator
- 6 CLass methods											6 min <<< manque un slide avec le bouton

- 4 Live: trouver de l'information Finder					6 min (ailleurs)		<< A faire
-- method
-- class
-- examples
-- scan all code About...
- 6 Live: Tools to find information: implementors, senders		6 min					<< A faire
		-- comment on peut lire un fichier png

- Live: Dice Game DSL dice								6 min
- Live: Dice Game DSL handle							6 min



!!!! Exos	
- Find how to 
- Redo: Refaire le dice 
- Ticket Model + 
-- send mail
-- participation gratuite / payante
- Tortillar: Lamps two of noury (need collection)  not needed

!!! Week 4: Héritage revisité - Qq Structures de donnée

- 6 Inheritance																6 min
- 6 InheritanceAndLookup-2-Lookup Did you really get this?					6 min
- 6 InheritanceAndLookup-3-Super Did you really get super?					6 min
- 6 InheritanceAndLookup-5-LookupMetaclass									6 min

- Basic-ArraySetOrderedCollection - First Glance at Collections (OrderedCollection, Array, Set)			6 min
- Iterators														6 min
- Streams in a nutshell											6 min			<< a revoir
-- streamContents

- 3 min PharoWebStack: 4/5 slides
	Voyage Mongo
	Magritte
	Zinc
	WebSocket
	
- Live: seaside counter / multi counter							6 min   
-- counter back button
	
- Seaside Component + html + bootstrap							6 min
- Seaside call:/answer:											6 min
- Live debugging the web Seaside tips and tricks
	10 + 20 + error + debugger									6 min
	

!!!! Exos	
- Find how to 
	- 
- Redo: TinyChat (pour extension futures)	
- Exo: 
-- Should give the correct of the event model.
-- Coding the view parts in Seaside (participant event)  
-- Call/Answer in Seaside for view
-- Login 

!!! Week 5: Exception – Debugging

- 6 Live: Picasa											6 min					<< a faire
	-- explaining one the fly code generation and coding in the debugger
- 6 Live: Debugger is your friend (idea?)					6 min					<< a faire
	test first create on the fly
	self halt 
	self haltOnce
	self haltIf: 

- 6 Exception 												6 min
- 6 InheritanceAndLookup-4-DoesNotUnderstand 				6 min

- 6 Extending GT:  Extending the inspector and spotter for the addressbook	6 min	<< a faire

- 6 Reflection 																		<< a faire
	- Basic structural
	- Window allInstances first close
	Close all debugger windows
	- this context implementation of HaltIf

- 6 A bit more Reflection 								<< a faire
-- compile:
-- scripting google service API? Stuff of franz Prinz

- 6 Magritte												6 min			<< a faire stef

!!!! Exos	

-  Find how to 
	- 
- Exo: TinyChat extension un et deux a faire
- Exo: Magritte version of ticket.						<< a faire
- Exo: ?? Discovering google services ?? We should check: https://www.min.at/prinz/?x=entry:entry150318-104537


!!! Week 6: Reflection

- 6 All the literal objects we did not talk about			 a mesurer
-- Numbers
--6  Strings, characters, symbols
-- Booleans

- 6 Did you read understand super method? 				6 min

- 6 Advanced Classes
-- class instance variables/ class var
-- variableSubclass: 

- 6 Design-SelfSendsArePlanForReuse.pillar messages are plan of reuse 		6 min

- 6 self class vs. AClass new												6 min

- 6 Hook and Template / Copy as a hook and template							6 min

- 6 Save objects in Mongo with Voyage										6 min		<< a faire stef and esteban

!!!! Exos	

- Saving the ticket and data in mongo
- Exo: template Artefact
- Exo: API Rest



!!! Week 7: Points de conception avancees

- 6 Understanding metaclass architecture					6 min	<<< slides a faire
- 6 Understanding metaclass architecture	(two)			6 min <<< slides a faire

- 6 Design-ClassAsObjects Class as objects					
-- no need for factory = static methods are ....
-- check the commandLineHandler in the image

- 6 Double dispatch on paper 					6 min	
-- do we have an example that is not numbers						<<< slides a faire
-- luc a un exemple 

- 6 Visitor design pattern or only in exo

- 6 Deploying an application 
-- pharo cloud 
-- cloud9

- 6 Conclusion
	




!! Potential Exos

- Deploy the app
- Expressions visitor

!!! 
Immersive Videos

- Finder
- GTSpotter
- developer dans le debugger
- coder n'import ou
- Publier du code
- Code search
- sender/implementor






!! Find how to 

- ouvrir et afficher un fichier jpeg
- lister le contenu d'un repertoire sur le disc
- requete http recuperer la meteo sur le net
- service google qui fait un calcul






!! Random Stuff
An item is composed of: 
- Name: ''Iteration with ZnEasy''
- Id: An id
- A tag: environment, syntax, model, fun, tip
- A Problem: How to iterate/manipulate collections?
- A description about one line: students learn iterators such as ==do:==, ==collect:==, and ==select:== on 
- Resources: 
-- *http://sdmeta.gforge.inria.fr/Videos/SqueakH-264Mov/006-FunWithCollection.mov*
- Ideas: use ZnEasy instead to select files served by a server.
- Exercises: A list of exercises.
- Contents: A little synopsis for the videos.
- Slides: A list of ids of useful slides.

!! Ideas to assess and dispatch within the lectures

And we could add some more specific ones:
- Browse and query XML
- Browse and query JSON
- Query a REST API with Zinc
- Query a Mongo DB

These would require extra packages to be loaded.



Inspector basic:
- Browsing the file system: 
http://www.humane-assessment.com/blog/browsing-files-with-gtinspector/
http://www.humane-assessment.com/blog/searching-file-system-with-gtspotter/
- Browsing a Postgres DB:
http://www.humane-assessment.com/blog/dynamic-exploration-of-a-postgres-db-with-the-gtinspector/
- Understanding morphs:
http://www.humane-assessment.com/blog/custom-morph-screenshot-with-gtinspector/
http://www.humane-assessment.com/blog/spotting-a-troublesome-image-morph/
http://www.humane-assessment.com/blog/managing-morph-keybindings-with-gtinspector


Advanced:
- Searching for code patterns:
http://www.humane-assessment.com/blog/searching-for-a-morph-glitch/
- Pharo performance analysis:
http://www.humane-assessment.com/blog/assessing-pharo-performance-with-gtinspector/
- Searching for object patterns (this one uses Roassal):
http://www.humane-assessment.com/blog/discover-contracts-by-visualizing-objects-in-gtinspector/
- Extending the inspector and spotter for a simple model (like the address book)
- Debugging the debugger with the inspector:
http://www.humane-assessment.com/blog/debugging-the-debugger-with-the-inspector/
- Understanding the AST with the inspector
- Guiding custom code changes with the inspector:
http://www.humane-assessment.com/blog/guiding-custom-changes-with-gtinspector
















